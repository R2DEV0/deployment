{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\r2dev\\\\Desktop\\\\coding_dojo\\\\mern_stack\\\\mernTest\\\\client\\\\src\\\\views\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nexport default (props => {\n  const [project, setProject] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  const [projectCompleted, setProjectCompleted] = useState({});\n  const [projectStarted, setProjectStarted] = useState({});\n  const [projectBacklog, setProjectBacklog] = useState({});\n  useEffect(() => {\n    let notStarted = [];\n    let notCompleted = [];\n    let completed = [];\n    axios.get('http://localhost:8000/api/projects').then(res => {\n      setProject(res.data);\n      res.data.map((item, i) => {\n        if (item.isStarted === false) {\n          notStarted.push(item);\n        } else if (item.isStarted == true && item.isComplete === false) {\n          notCompleted.push(item);\n        } else if (item.isComplete == true && item.isStarted === true) {\n          completed.push(item);\n        }\n      });\n      setProjectBacklog(notStarted);\n      setProjectStarted(notCompleted);\n      setProjectCompleted(completed);\n      setLoaded(true);\n    });\n  }, []);\n\n  const update = () => {\n    let notStarted = [];\n    let notCompleted = [];\n    let completed = [];\n    axios.get('http://localhost:8000/api/projects').then(res => {\n      setProject(res.data);\n      res.data.map((item, i) => {\n        if (item.isStarted === false) {\n          notStarted.push(item);\n        } else if (item.isStarted == true && item.isComplete === false || item.isComplete === null) {\n          notCompleted.push(item);\n        } else if (item.isComplete == true && item.isStarted === true) {\n          completed.push(item);\n        }\n      });\n      setProjectBacklog(notStarted);\n      setProjectStarted(notCompleted);\n      setProjectCompleted(completed);\n      setLoaded(true);\n    });\n  };\n\n  const toggleStarted = i => {\n    const projectCopy = [...project];\n    const selectedProject = projectCopy[i];\n    selectedProject.isStarted = !selectedProject.isStarted;\n    setProject(projectCopy);\n    update();\n  };\n\n  const toggleComplete = i => {\n    const projectCopy = [...project];\n    const selectedProject = projectCopy[i];\n    selectedProject.isComplete = !selectedProject.isComplete;\n    setProject(pro);\n  };\n\n  const startProj = (id, status, i, name, due_date, isComplete) => {\n    axios.put(`http://localhost:8000/api/update/${id}`, {\n      'isStarted': !status,\n      'name': name,\n      'due_date': due_date,\n      'isComplete': isComplete\n    }).then(res => {\n      console.log(res);\n      toggleStarted(i);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const completeProj = (id, status, i, name, due_date, isStarted) => {\n    axios.put(`http://localhost:8000/api/update/${id}`, {\n      'isComplete': !status,\n      'name': name,\n      'due_date': due_date,\n      'isComplete': isComplete\n    }).then(res => {\n      console.log(res);\n      toggleComplete(i);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteHandler = id => {\n    axios.delete(`http://localhost:8000/api/projects/${id}`).then(res => {\n      console.log(res);\n      setProject(project.filter(project => project._id !== id));\n      update();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const addNew = e => {\n    navigate('/create');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Backlog\"), loaded && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 28\n    }\n  }, projectBacklog.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      key: i,\n      style: {\n        border: '1px solid black',\n        padding: '10px',\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Project: \", item.name), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Due by: \", item.due_date), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary btn-sm\",\n      onClick: e => {\n        startProj(item._id, item.isStarted, i, item.name, item.due_date, item.isComplete);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Start Project\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Started\"), loaded && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      marginRight: '20px',\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 24\n    }\n  }, projectStarted.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      key: i,\n      style: {\n        border: '1px solid black',\n        padding: '10px',\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Project: \", item.name), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, \"Due by: \", item.due_date), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: e => {\n        completeProj(item._id, item.isComplete, i, item.name, item.due_date, item.isStarted);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Completed\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Completed\"), loaded && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 24\n    }\n  }, projectCompleted.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      key: i,\n      style: {\n        border: '1px solid black',\n        padding: '10px',\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Project: \", item.name), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Due by: \", item.due_date), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger btn-sm\",\n      onClick: e => {\n        deleteHandler(item._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"Delete Project\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-md\",\n    onClick: addNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Add New Project\")));\n});","map":{"version":3,"sources":["C:/Users/r2dev/Desktop/coding_dojo/mern_stack/mernTest/client/src/views/Main.js"],"names":["React","useState","useEffect","Link","navigate","axios","props","project","setProject","loaded","setLoaded","projectCompleted","setProjectCompleted","projectStarted","setProjectStarted","projectBacklog","setProjectBacklog","notStarted","notCompleted","completed","get","then","res","data","map","item","i","isStarted","push","isComplete","update","toggleStarted","projectCopy","selectedProject","toggleComplete","pro","startProj","id","status","name","due_date","put","console","log","catch","err","completeProj","deleteHandler","delete","filter","_id","addNew","e","display","verticalAlign","textAlign","border","padding","listStyle","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default (props) => {\r\n    const[project, setProject] = useState('');\r\n    const[loaded, setLoaded] = useState(false);\r\n    const[projectCompleted, setProjectCompleted] = useState({});\r\n    const[projectStarted, setProjectStarted] = useState({});\r\n    const[projectBacklog, setProjectBacklog] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        let notStarted =[];\r\n        let notCompleted =[];\r\n        let completed =[];\r\n        axios.get('http://localhost:8000/api/projects')\r\n        .then(res => {\r\n            setProject(res.data);\r\n            res.data.map((item, i) => {\r\n                if(item.isStarted === false){\r\n                    notStarted.push(item)\r\n                }\r\n                else if(item.isStarted == true && item.isComplete === false){\r\n                    notCompleted.push(item)\r\n                }\r\n                else if(item.isComplete == true && item.isStarted === true){\r\n                    completed.push(item)\r\n                }\r\n            })\r\n            setProjectBacklog(notStarted);\r\n            setProjectStarted(notCompleted);\r\n            setProjectCompleted(completed);\r\n            setLoaded(true)\r\n        })\r\n    }, []);\r\n\r\n    const update = () => {\r\n        let notStarted =[];\r\n        let notCompleted =[];\r\n        let completed =[];\r\n        axios.get('http://localhost:8000/api/projects')\r\n        .then(res => {\r\n            setProject(res.data);\r\n            res.data.map((item, i) => {\r\n                if(item.isStarted === false){\r\n                    notStarted.push(item)\r\n                }\r\n                else if(item.isStarted == true && item.isComplete === false || item.isComplete === null){\r\n                    notCompleted.push(item)\r\n                }\r\n                else if(item.isComplete == true && item.isStarted === true){\r\n                    completed.push(item)\r\n                }\r\n            })\r\n            setProjectBacklog(notStarted);\r\n            setProjectStarted(notCompleted);\r\n            setProjectCompleted(completed);\r\n            setLoaded(true)\r\n        })\r\n    };\r\n\r\n    const toggleStarted = (i) => {\r\n        const projectCopy = [...project];\r\n        const selectedProject = projectCopy[i];\r\n        selectedProject.isStarted = !selectedProject.isStarted;\r\n        setProject(projectCopy);\r\n        update();\r\n    }\r\n\r\n    const toggleComplete = (i) => {\r\n        const projectCopy = [...project];\r\n        const selectedProject = projectCopy[i];\r\n        selectedProject.isComplete = !selectedProject.isComplete;\r\n        setProject(pro) \r\n    }\r\n\r\n\r\n    const startProj = (id, status, i, name, due_date, isComplete) => {\r\n        axios.put(`http://localhost:8000/api/update/${id}`, {'isStarted': !status, 'name': name, 'due_date': due_date, 'isComplete': isComplete })\r\n            .then(res => {\r\n                console.log(res)\r\n                toggleStarted(i)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n    const completeProj = (id, status, i, name, due_date, isStarted) => {\r\n        axios.put(`http://localhost:8000/api/update/${id}`, {'isComplete': !status, 'name': name, 'due_date': due_date, 'isComplete': isComplete })\r\n            .then(res => {\r\n                console.log(res)\r\n                toggleComplete(i)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        axios.delete(`http://localhost:8000/api/projects/${id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setProject(project.filter(project => project._id !== id));\r\n                update()\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n\r\n    const addNew = (e) => {\r\n        navigate('/create')\r\n    }\r\n\r\n    return(\r\n        <div className='container'>\r\n            <div style={{display: 'inline-block', verticalAlign:'top'}}>\r\n                <h4 style={{textAlign:'center'}} >Backlog</h4>\r\n                {loaded && <div style={{display: 'inline-block'}}>\r\n                    {projectBacklog.map((item, i) => { return <ul key={i} style={{border: '1px solid black', padding:'10px', listStyle:'none'}}>\r\n                        <li>Project: {item.name}</li>\r\n                        <li>Due by: {item.due_date}</li>\r\n                        <li><button className='btn btn-outline-secondary btn-sm' onClick={(e) => {startProj(item._id, item.isStarted, i, item.name, item.due_date, item.isComplete)}}>Start Project</button></li>\r\n                    </ul>})}\r\n                </div>}\r\n            </div>\r\n\r\n        <div style={{display: 'inline-block', verticalAlign:'top'}}>\r\n            <h4 style={{textAlign:'center'}}>Started</h4>\r\n            {loaded && <div style={{display: 'inline-block', marginRight:'20px', marginLeft: '20px'}}>\r\n                    {projectStarted.map((item, i) => { return <ul key={i} style={{border: '1px solid black', padding:'10px', listStyle:'none'}}>\r\n                        <li>Project: {item.name}</li>\r\n                        <li>Due by: {item.due_date}</li>\r\n                        <li><button className='btn btn-outline-primary btn-sm' onClick={(e) => {completeProj(item._id, item.isComplete, i, item.name, item.due_date, item.isStarted)}} >Completed</button></li>\r\n                    </ul>\r\n                })}\r\n            </div>}\r\n        </div>\r\n\r\n        <div style={{display: 'inline-block', verticalAlign:'top'}}>\r\n            <h4 style={{textAlign:'center'}}>Completed</h4>\r\n            {loaded && <div style={{display: 'inline-block'}}>\r\n                {projectCompleted.map((item, i) => { return <ul key={i} style={{border: '1px solid black', padding:'10px', listStyle:'none'}}>\r\n                    <li>Project: {item.name}</li>\r\n                    <li>Due by: {item.due_date}</li>\r\n                    <li><button className='btn btn-outline-danger btn-sm' onClick={(e) => {deleteHandler(item._id)}} >Delete Project</button></li>\r\n                </ul>})}\r\n            </div>}\r\n            </div>\r\n\r\n            <div>\r\n                <button className='btn btn-primary btn-md'onClick={addNew}>Add New Project</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}